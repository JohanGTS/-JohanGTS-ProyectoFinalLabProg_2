/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package form;

import Placeholder.TextPrompt;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author Gabriel Marte
 */
public class PanelClientes extends javax.swing.JPanel {

    public static String sAntiguaLinea="";
    public static String sNuevaLinea="";
    public static boolean crear;
    public static Date fechaN;
    public static Date fechaI;
    public static final SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
    /**
     * Creates new form PanelClientes
     */
    public PanelClientes() {
        initComponents();
        grupoEstatus.add(activoEstatus);
        grupoEstatus.add(pasivoEstatus);
        grupoTipo.add(activoTipo);
        grupoTipo.add(invitadoTipo);
        TextPrompt placeholderIdCliente= new TextPrompt("Obligatorio, debe contener 8 d√≠gitos",idClienteTxt);
        TextPrompt placeholderNombreCliente= new TextPrompt("Obligatorio",nombreClienteTxt);
        TextPrompt placeholderApellidoPaterno= new TextPrompt("Obligatorio",apellidoPaternoTxt);
        TextPrompt placeholderApellidoMaterno= new TextPrompt("Obligatorio",apellidoMaternoTxt);
        TextPrompt placeholderDire= new TextPrompt("Obligatorio, debe tener al menos 10 caracteres",direccionTxt);
        TextPrompt placeholderFechaNacimiento= new TextPrompt("Obligatorio  DD/MM/AAAA",fechaNacimientoTxt);
        TextPrompt placeholderTelefono= new TextPrompt("Obligatorio, debe tener 10 caracteres",telefonoTxt);
        TextPrompt placeholderCelular= new TextPrompt("Obligatorio, debe tener 10 caracteres",celularTxt);
        TextPrompt placeholderFechaIngreso= new TextPrompt("Obligatorio  DD/MM/AAAA",fechaIngresoTxt);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoEstatus = new javax.swing.ButtonGroup();
        grupoTipo = new javax.swing.ButtonGroup();
        jLabel10 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nombreClienteTxt = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        valorCuotasTxt = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        correoElectronicoTxt = new javax.swing.JTextField();
        jSeparator8 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        balanceTxt = new javax.swing.JTextField();
        jSeparator9 = new javax.swing.JSeparator();
        jSeparator10 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        celularTxt = new javax.swing.JTextField();
        jSeparator11 = new javax.swing.JSeparator();
        jLabel11 = new javax.swing.JLabel();
        fechaIngresoTxt = new javax.swing.JTextField();
        jSeparator12 = new javax.swing.JSeparator();
        jLabel12 = new javax.swing.JLabel();
        apellidoPaternoTxt = new javax.swing.JTextField();
        jSeparator13 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        apellidoMaternoTxt = new javax.swing.JTextField();
        jSeparator14 = new javax.swing.JSeparator();
        jLabel14 = new javax.swing.JLabel();
        direccionTxt = new javax.swing.JTextField();
        jSeparator15 = new javax.swing.JSeparator();
        jLabel15 = new javax.swing.JLabel();
        fechaNacimientoTxt = new javax.swing.JTextField();
        jSeparator16 = new javax.swing.JSeparator();
        jLabel16 = new javax.swing.JLabel();
        telefonoTxt = new javax.swing.JTextField();
        jSeparator17 = new javax.swing.JSeparator();
        lblAgregar = new javax.swing.JLabel();
        lblDinamico = new javax.swing.JLabel();
        idClienteTxt = new javax.swing.JTextField();
        activoTipo = new javax.swing.JCheckBox();
        invitadoTipo = new javax.swing.JCheckBox();
        activoEstatus = new javax.swing.JCheckBox();
        pasivoEstatus = new javax.swing.JCheckBox();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setText("Registrar nuevo Cliente");
        jLabel10.setOpaque(true);
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 260, 40));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Valor de Cuotas");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 630, -1, -1));

        nombreClienteTxt.setBorder(null);
        add(nombreClienteTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 233, 20));
        add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 250, 10));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Nombre Cliente");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));
        add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 218, 250, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Estatus");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 270, -1, 20));

        valorCuotasTxt.setBorder(null);
        add(valorCuotasTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 660, 233, 20));
        add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 680, 250, 10));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("ID Cliente");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));
        add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 320, 250, 10));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Tipo");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 370, -1, -1));
        add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 420, 250, 10));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Correo Electronico");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 460, -1, -1));

        correoElectronicoTxt.setBorder(null);
        add(correoElectronicoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 490, 233, 20));
        add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 510, 250, 10));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Balance");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 540, -1, -1));

        balanceTxt.setBorder(null);
        add(balanceTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 570, 233, 20));
        add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 590, 250, 10));

        jSeparator10.setOrientation(javax.swing.SwingConstants.VERTICAL);
        add(jSeparator10, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 0, 10, 690));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Celular ");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(307, 79, -1, -1));

        celularTxt.setBorder(null);
        add(celularTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 100, 233, 20));
        add(jSeparator11, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 120, 230, 10));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Fecha de Ingreso");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(307, 155, -1, -1));

        fechaIngresoTxt.setBorder(null);
        add(fechaIngresoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 200, 233, 20));
        add(jSeparator12, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 220, 230, 10));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("Apellido Paterno ");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, 20));

        apellidoPaternoTxt.setBorder(null);
        add(apellidoPaternoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 233, 20));
        add(jSeparator13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 250, 10));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setText("Apellido Materno ");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, -1, -1));

        apellidoMaternoTxt.setBorder(null);
        add(apellidoMaternoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, 233, 20));
        add(jSeparator14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, 250, 10));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel14.setText("Direccion");
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 460, -1, -1));

        direccionTxt.setBorder(null);
        add(direccionTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 490, 233, 20));
        add(jSeparator15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 510, 250, 10));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel15.setText("Fecha de Nacimiento");
        add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 540, -1, -1));

        fechaNacimientoTxt.setBorder(null);
        add(fechaNacimientoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 570, 233, 20));
        add(jSeparator16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 590, 250, 10));

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel16.setText("Telefono");
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 630, -1, -1));

        telefonoTxt.setBorder(null);
        add(telefonoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 660, 233, 20));
        add(jSeparator17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 680, 250, 10));

        lblAgregar.setBackground(new java.awt.Color(0, 0, 0));
        lblAgregar.setFont(new java.awt.Font("Californian FB", 0, 18)); // NOI18N
        lblAgregar.setForeground(new java.awt.Color(255, 255, 255));
        lblAgregar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAgregar.setText("AGREGAR");
        lblAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblAgregar.setOpaque(true);
        lblAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAgregarMouseClicked(evt);
            }
        });
        add(lblAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 690, 130, 40));
        add(lblDinamico, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 10, 80, 20));

        idClienteTxt.setBorder(null);
        idClienteTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idClienteTxtActionPerformed(evt);
            }
        });
        add(idClienteTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 233, 20));

        activoTipo.setText("Activo");
        add(activoTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 390, -1, -1));

        invitadoTipo.setSelected(true);
        invitadoTipo.setText("Invitado");
        add(invitadoTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 390, -1, -1));

        activoEstatus.setText("Activo");
        add(activoEstatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 290, -1, -1));

        pasivoEstatus.setSelected(true);
        pasivoEstatus.setText("Pasivo");
        add(pasivoEstatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 290, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void idClienteTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idClienteTxtActionPerformed
        String cod;
        String status="";
        String tipo="";
        if(!idClienteTxt.getText().matches("[0-9]{8}"))//.matches taoma una sub region de algo, en este caso n√∫meros enteros del 0 al 9
            {
                idClienteTxt.setText("");
                JOptionPane.showMessageDialog(null,"El tel√©fono solo acepta valores num√©ricos enteros y debe tener 10 d√≠gitos","Valor incorrecto",JOptionPane.ERROR_MESSAGE);
            }
        else
        {
            cod=idClienteTxt.getText();
            boolean encontrado=false;
            File archivoReservas= new File("C:\\-JohanGTS-ProyectoFinalLabProg_2\\src\\ArchivosDeTexto\\archivoClientes.txt");
            Scanner s;  
            Scanner sl = null;
            try {
                
                if(!archivoReservas.exists())
                    archivoReservas.createNewFile();
                s= new Scanner(archivoReservas);
                while(s.hasNext()&&!encontrado)
                {
                    String linea=s.nextLine();
                    sl= new Scanner(linea);
                    sl.useDelimiter("\\s*;\\s*");
                    if(cod.equals(sl.next())){
                        nombreClienteTxt.setText(sl.next());
                        apellidoPaternoTxt.setText(sl.next());
                        apellidoMaternoTxt.setText(sl.next());
                        direccionTxt.setText(sl.next());
                        fechaNacimientoTxt.setText(sl.next());
                        telefonoTxt.setText(sl.next());
                        celularTxt.setText(sl.next());
                        fechaIngresoTxt.setText(sl.next());
                        if(sl.next().equals("activo"))
                        {
                            status="activo";
                            activoEstatus.setSelected(true);
                        }
                        else
                        {
                            status="pasivo";
                            pasivoEstatus.setSelected(true);
                        }
                        
                        if(sl.next().equals("activo"))
                        {
                            tipo="activo";
                            activoTipo.setSelected(true);
                        }
                        else
                        {
                            tipo="invitado";
                            invitadoTipo.setSelected(true);
                        }  
                        
                        correoElectronicoTxt.setText(sl.next());
                        balanceTxt.setText(sl.next());
                        valorCuotasTxt.setText(sl.next());
                        
                        lblDinamico.setText("Modificando");
                        sAntiguaLinea=(idClienteTxt.getText()+";"+nombreClienteTxt.getText()+";"+apellidoPaternoTxt.getText()+";"+apellidoMaternoTxt.getText()+";"+
                        direccionTxt.getText()+";"+fechaNacimientoTxt.getText()+";"+telefonoTxt.getText()+";"+celularTxt.getText()+";"+
                        fechaIngresoTxt.getText()+";"+status+";"+tipo+";"+correoElectronicoTxt.getText()+";"+balanceTxt.getText()+";"+
                        valorCuotasTxt.getText());
                        encontrado=true;
                        crear=true;
                    }
                    else{
                        lblDinamico.setText("Creando");
                        
                        nombreClienteTxt.setText("");
                        apellidoMaternoTxt.setText("");
                        apellidoPaternoTxt.setText("");
                        direccionTxt.setText("");
                        fechaNacimientoTxt.setText("");
                        telefonoTxt.setText("");
                        celularTxt.setText("");
                        fechaIngresoTxt.setText("");
                        correoElectronicoTxt.setText("");
                        balanceTxt.setText("");
                        valorCuotasTxt.setText("");
                        invitadoTipo.setSelected(false);
                        pasivoEstatus.setSelected(true);
                        crear=false;
                    }
                }
                s.close();
                try 
                {
                    sl.close();
                } catch (NullPointerException e) 
                {
                    lblDinamico.setText("Creando");
                }
                
            }
            catch(NullPointerException e)
            {
                lblDinamico.setText("Creando");
            }
            catch (FileNotFoundException e)
            {
                JOptionPane.showMessageDialog(null, "Archivo de texto no encontrado");
                lblDinamico.setText("a");
            } catch (IOException ex) 
            {
                ex.printStackTrace();
            }
        }
        
    }//GEN-LAST:event_idClienteTxtActionPerformed

    private void lblAgregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAgregarMouseClicked
        try {
            boolean vacio=true;
            String tipo="";
            String status="";
            File f= new File("C:\\-JohanGTS-ProyectoFinalLabProg_2\\src\\ArchivosDeTexto\\archivoClientes.txt");
            if(!f.exists())
                f.createNewFile();
            if(idClienteTxt.getText().equals("")||nombreClienteTxt.getText().equals("")||apellidoMaternoTxt.getText().equals("")||apellidoPaternoTxt.getText().equals("")
                    ||direccionTxt.getText().equals("")||fechaNacimientoTxt.getText().equals("")||telefonoTxt.getText().equals("")||celularTxt.getText().equals("")||
                    fechaIngresoTxt.getText().equals(""))
                vacio=false;
            if(!telefonoTxt.getText().matches("[0-9]{10}"))//.matches taoma una sub region de algo, en este caso n√∫meros enteros del 0 al 9
            {
                vacio=false;
                telefonoTxt.setText("");
                JOptionPane.showMessageDialog(null,"El tel√©fono solo acepta valores num√©ricos enteros y debe tener 10 d√≠gitos","Valor incorrecto",JOptionPane.ERROR_MESSAGE);
            }
            if(!idClienteTxt.getText().matches("[0-9]{8}"))//.matches taoma una sub region de algo, en este caso n√∫meros enteros del 0 al 9
            {
                vacio=false;
                idClienteTxt.setText("");
                JOptionPane.showMessageDialog(null,"El tel√©fono solo acepta valores num√©ricos enteros y debe tener 10 d√≠gitos","Valor incorrecto",JOptionPane.ERROR_MESSAGE);
            }
            if(!celularTxt.getText().matches("[0-9]{10}"))//.matches taoma una sub region de algo, en este caso n√∫meros enteros del 0 al 9
            {
                vacio=false;
                celularTxt.setText("");
                JOptionPane.showMessageDialog(null,"El celular solo acepta valores num√©ricos enteros y debe tener 10 d√≠gitos","Valor incorrecto",JOptionPane.ERROR_MESSAGE);
            }
            if(direccionTxt.getText().length()<8)
            {
                vacio=false;
                direccionTxt.setText("");
                JOptionPane.showMessageDialog(null,"La direcci√≥n necesita al menos 8 caracteres","Longitud incorrecta",JOptionPane.ERROR_MESSAGE);
            
            }
            if(!valorCuotasTxt.getText().isEmpty())
            {
                try 
                {
                    Double valorCuota=Double.parseDouble(valorCuotasTxt.getText());
                    if(valorCuota<=0)
                    {
                        vacio=false;
                        valorCuotasTxt.setText("");
                        JOptionPane.showMessageDialog(null,"El valor de la cuota debe ser un n√∫mero positivo","Valor incorrecto",JOptionPane.ERROR_MESSAGE);

                    }
                } 
                catch (Exception e) 
                {
                    vacio=false;
                    valorCuotasTxt.setText("");
                    JOptionPane.showMessageDialog(null,"El valor de la cuota debe ser un n√∫mero positivo","Valor incorrecto",JOptionPane.ERROR_MESSAGE);

                }
                
            }
            else
            {
                valorCuotasTxt.setText("500");
            }
            if(balanceTxt.getText().isEmpty())
                balanceTxt.setText("0");
            if(!correoElectronicoTxt.getText().isEmpty()&&!correoElectronicoTxt.getText().equals("ninguno"))
            {
                if(correoElectronicoTxt.getText().length()<8||!correoElectronicoTxt.getText().contains("@")||!correoElectronicoTxt.getText().contains("."))
                {
                    JOptionPane.showMessageDialog(null,"El correo debe contener m√≠nimo un @ un . y tener una longitud de 8 caracteres","Longitud insuficiente",JOptionPane.ERROR_MESSAGE);
                    correoElectronicoTxt.setText(" ");
                    vacio=false;
                } 
            }
            else
                correoElectronicoTxt.setText("ninguno");
            if(!fechaNacimientoTxt.getText().isEmpty())
            {
                String fechaBruta=fechaNacimientoTxt.getText();
                String[] separada=fechaBruta.split("/");
                try {
                    if(Integer.parseInt(separada[0])>0&&Integer.parseInt(separada[0])<32&&
                        Integer.parseInt(separada[1])>0&&Integer.parseInt(separada[1])<13&&
                        Integer.parseInt(separada[2])>1900)
                    {
                        try 
                        {
                            fechaN=formato.parse((fechaBruta));
                            System.out.println(formato.format(fechaN));
                        } 
                        catch (ParseException ex) {
                            ex.printStackTrace();
                        }
                    }
                else
                    {
                        JOptionPane.showMessageDialog(null,"Formato de fecha incorrecto","Formato de fecha incorrecto",JOptionPane.ERROR_MESSAGE);
                        fechaNacimientoTxt.setText("");
                        vacio=false;
                    }
                }
                catch (Exception e) {
                    JOptionPane.showMessageDialog(null,"Solo se pueden poner n√∫meros del 0 al 9","Formato de fecha incorrecto",JOptionPane.ERROR_MESSAGE);
                    fechaNacimientoTxt.setText("");
                    vacio=false;
                }
            }
            if(!fechaIngresoTxt.getText().isEmpty())
            {
                String fechaBruta=fechaIngresoTxt.getText();
                String[] separada=fechaBruta.split("/");
                try {
                    if(Integer.parseInt(separada[0])>0&&Integer.parseInt(separada[0])<32&&
                        Integer.parseInt(separada[1])>0&&Integer.parseInt(separada[1])<13&&
                        Integer.parseInt(separada[2])>1900)
                    {
                        try 
                        {
                            fechaI=formato.parse((fechaBruta));
                            System.out.println(formato.format(fechaN));
                        } 
                        catch (ParseException ex) {
                            ex.printStackTrace();
                        }
                    }
                else
                    {
                        JOptionPane.showMessageDialog(null,"Formato de fecha incorrecto","Formato de fecha incorrecto",JOptionPane.ERROR_MESSAGE);
                        fechaIngresoTxt.setText("");
                        vacio=false;
                    }
                }
                catch (Exception e) {
                    JOptionPane.showMessageDialog(null,"Solo se pueden poner n√∫meros del 0 al 9","Formato de fecha incorrecto",JOptionPane.ERROR_MESSAGE);
                    fechaIngresoTxt.setText("");
                    vacio=false;
                }
            }
            if(!vacio)
                JOptionPane.showMessageDialog(null,"Hay campos obligatorios sin completar","Campos vac√≠os",JOptionPane.ERROR_MESSAGE);
            else
            {
                String idClie=idClienteTxt.getText();
                String nom=nombreClienteTxt.getText();
                String apeP=apellidoPaternoTxt.getText();
                String apeM=apellidoMaternoTxt.getText();
                String direc=direccionTxt.getText();
                Date fechaNac=fechaN;
                String tel=telefonoTxt.getText();
                String cel=celularTxt.getText();
                Date fechaIng=fechaI;
                if(activoTipo.isSelected())
                    tipo="activo";
                else
                    tipo="pasivo";
                if(activoEstatus.isSelected())
                    status="activo";
                else
                    status="invitado";
                String correo=correoElectronicoTxt.getText();
                double balanc=Double.parseDouble(balanceTxt.getText());
                double valorCu=Double.parseDouble(valorCuotasTxt.getText());
                if(!crear)
                    guardarDatos(idClie,nom,apeP,apeM,direc,fechaNac,tel,cel,fechaIng,status,tipo,correo,balanc,valorCu);
                else
                {
                    sNuevaLinea=(idClienteTxt.getText()+";"+nombreClienteTxt.getText()+";"+apellidoPaternoTxt.getText()+";"+apellidoMaternoTxt.getText()+";"+
                            direccionTxt.getText()+";"+formato.format(fechaN)+";"+telefonoTxt.getText()+";"+celularTxt.getText()+";"+
                            formato.format(fechaI)+";"+status+";"+tipo+";"+correoElectronicoTxt.getText()+";"+
                            balanceTxt.getText()+";"+valorCuotasTxt.getText());
                    modificar(sAntiguaLinea,sNuevaLinea);
                }
                JOptionPane.showMessageDialog(null, "Cliente agregado correctamente");
                idClienteTxt.setText("");
                nombreClienteTxt.setText("");
                apellidoMaternoTxt.setText("");
                apellidoPaternoTxt.setText("");
                direccionTxt.setText("");
                fechaNacimientoTxt.setText("");
                fechaIngresoTxt.setText("");
                telefonoTxt.setText("");
                celularTxt.setText("");
                correoElectronicoTxt.setText("");
                balanceTxt.setText("");
                lblDinamico.setText("");
                valorCuotasTxt.setText("");
                pasivoEstatus.setSelected(true);
                invitadoTipo.setSelected(true);
            }
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_lblAgregarMouseClicked
public void guardarDatos(String id,String nombre,String apePat,String apeMat, String direc, Date fechaNac, String telefono,
String celular, Date fechaIng, String status, String tipo,String correo, double balance, double valorCuotas){
        try
        {
           FileWriter F1=new FileWriter("C:\\-JohanGTS-ProyectoFinalLabProg_2\\src\\ArchivosDeTexto\\archivoClientes.txt",true);
           PrintWriter pw= new PrintWriter(F1);
           pw.println(id+";"+nombre+";"+apePat+";"+apeMat+";"+direc+";"+formato.format(fechaNac)+";"+telefono+";"+celular+";"+formato.format(fechaIng)+";"
                   +status+";"+tipo+";"+correo+";"+balance+";"+valorCuotas);
           pw.close();
        } catch (Exception e) 
        {
            JOptionPane.showMessageDialog(null, "Error al grabar el archivo");
        }
    }
    
    public static  void modificar(String lineaAntigua, String nuevaLinea){ 
       
       File fAntiguo= new File("C:\\-JohanGTS-ProyectoFinalLabProg_2\\src\\ArchivosDeTexto\\archivoClientes.txt");
       File fNuevo= new File("C:\\-JohanGTS-ProyectoFinalLabProg_2\\src\\ArchivosDeTexto\\temporal.txt");
       String aCadena=lineaAntigua;
       String nCadena=nuevaLinea;
       
       BufferedReader br;
        try {
            if(fAntiguo.exists())
            {
                br=new BufferedReader(new FileReader(fAntiguo));
                String linea;
                while((linea=br.readLine()) != null)
                {
                    
                    if(linea.equals(aCadena)){
                        escribir(fNuevo, nCadena);
                    }
                        
                    else{
                        escribir(fNuevo, linea);
                    }
                        
                }
                br.close();
                String nAntiguo=fAntiguo.getName();
                File auxiliar= new File(fAntiguo.getAbsolutePath());
                borrar(fAntiguo);
                System.out.println(fNuevo.renameTo(auxiliar));
            }
            else
                System.out.println("El archivo no existe");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
            
   
    
    public static void escribir(File Ffichero,String cadena)
    {
        BufferedWriter bw;
        try 
        {
            if(!Ffichero.exists())
                Ffichero.createNewFile();
            bw= new BufferedWriter(new FileWriter(Ffichero,true));
            bw.write(cadena+"\r\n");
            bw.close();
        }
        catch (Exception ex) {
              ex.printStackTrace();
           } 
    }
    public static  void borrar(File Ffichero){
        try {

            if(Ffichero.exists())
            {
                System.out.println(Ffichero.delete());
            }
            } 
           catch (Exception ex) { 
             System.out.println(ex.getMessage());
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox activoEstatus;
    private javax.swing.JCheckBox activoTipo;
    private javax.swing.JTextField apellidoMaternoTxt;
    private javax.swing.JTextField apellidoPaternoTxt;
    private javax.swing.JTextField balanceTxt;
    private javax.swing.JTextField celularTxt;
    private javax.swing.JTextField correoElectronicoTxt;
    private javax.swing.JTextField direccionTxt;
    private javax.swing.JTextField fechaIngresoTxt;
    private javax.swing.JTextField fechaNacimientoTxt;
    private javax.swing.ButtonGroup grupoEstatus;
    private javax.swing.ButtonGroup grupoTipo;
    private javax.swing.JTextField idClienteTxt;
    private javax.swing.JCheckBox invitadoTipo;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JSeparator jSeparator16;
    private javax.swing.JSeparator jSeparator17;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JLabel lblAgregar;
    private javax.swing.JLabel lblDinamico;
    private javax.swing.JTextField nombreClienteTxt;
    private javax.swing.JCheckBox pasivoEstatus;
    private javax.swing.JTextField telefonoTxt;
    private javax.swing.JTextField valorCuotasTxt;
    // End of variables declaration//GEN-END:variables
}
