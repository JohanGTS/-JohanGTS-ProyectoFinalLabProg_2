
package form;

import Placeholder.TextPrompt;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Date;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author Gabriel Marte
 */
public class PanelCuotas extends javax.swing.JPanel {
    public static String sAntiguaLinea="";
    public static String sNuevaLinea="";
    public static boolean crear;
    private static Scanner s;
    private static Date fecha;
            
    /**
     * Creates new form PanelLocalizacion
     */
    public PanelCuotas() {
        initComponents();
        TextPrompt placeholderId= new TextPrompt("Obligatorio, debe contener 8 dígitos",idCuotaTxt);
        TextPrompt placeholderTipo= new TextPrompt("Obligatorio",valorCobroTxt);
        TextPrompt placeholderCliente =new TextPrompt("Obligatorio, debe contener 8 dígitos",idCliente);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAgregar = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        valorCobroTxt = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        lblDinamico = new javax.swing.JLabel();
        fechaCuotalbl = new javax.swing.JLabel();
        fechaCuotaTxt = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        idClientelbl = new javax.swing.JLabel();
        idCliente = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        idCuotalbl = new javax.swing.JLabel();
        idCuotaTxt = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        statusCuotalbl = new javax.swing.JLabel();
        statusCuotaTxt = new javax.swing.JTextField();
        jSeparator7 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblAgregar.setBackground(new java.awt.Color(0, 0, 0));
        lblAgregar.setFont(new java.awt.Font("Californian FB", 0, 18)); // NOI18N
        lblAgregar.setForeground(new java.awt.Color(255, 255, 255));
        lblAgregar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAgregar.setText("AGREGAR");
        lblAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblAgregar.setOpaque(true);
        lblAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAgregarMouseClicked(evt);
            }
        });
        add(lblAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 290, 130, 40));
        add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 233, 10));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Valor cobro");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(307, 79, -1, -1));

        valorCobroTxt.setBorder(null);
        add(valorCobroTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 100, 233, 20));
        add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 120, 230, 10));

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setText("Registrar nueva Cuota");
        jLabel10.setOpaque(true);
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 260, 40));

        jSeparator8.setOrientation(javax.swing.SwingConstants.VERTICAL);
        add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 10, 10, 250));
        add(lblDinamico, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 20, 80, 20));

        fechaCuotalbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        fechaCuotalbl.setText("Fecha cuota");
        add(fechaCuotalbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        fechaCuotaTxt.setEditable(false);
        fechaCuotaTxt.setBorder(null);
        add(fechaCuotaTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 233, 20));
        add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 233, 10));

        idClientelbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        idClientelbl.setText("ID Cliente");
        add(idClientelbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, -1));

        idCliente.setBorder(null);
        idCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idClienteActionPerformed(evt);
            }
        });
        add(idCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 233, 20));
        add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 233, 10));

        idCuotalbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        idCuotalbl.setText("ID Cuota");
        add(idCuotalbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 79, -1, -1));

        idCuotaTxt.setBorder(null);
        idCuotaTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idCuotaTxtActionPerformed(evt);
            }
        });
        add(idCuotaTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 233, 20));
        add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 233, 10));

        statusCuotalbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        statusCuotalbl.setText("Status Cuota");
        add(statusCuotalbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 140, -1, -1));

        statusCuotaTxt.setEditable(false);
        statusCuotaTxt.setBorder(null);
        add(statusCuotaTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 160, 233, 20));
        add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 180, 233, 10));
    }// </editor-fold>//GEN-END:initComponents

    private void lblAgregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAgregarMouseClicked
        boolean vacio=true;
        if(idCuotaTxt.getText().isEmpty()||idCliente.getText().isEmpty()||valorCobroTxt.getText().isEmpty())
            vacio=false;
        if(!idCuotaTxt.getText().matches("[0-9]{8}"))//.matches taoma una sub region de algo, en este caso números enteros del 0 al 9
            {
                vacio=false;
                idCuotaTxt.setText("");
                JOptionPane.showMessageDialog(null,"El id de la cuota solo acepta valores numéricos enteros con 8 dígitos","Valor incorrecto",JOptionPane.ERROR_MESSAGE);
            }
        if(!idCliente.getText().matches("[0-9]{8}"))//.matches taoma una sub region de algo, en este caso números enteros del 0 al 9
            {
                vacio=false;
                idCuotaTxt.setText("");
                JOptionPane.showMessageDialog(null,"El id del cliente solo acepta valores numéricos enteros con 8 dígitos","Valor incorrecto",JOptionPane.ERROR_MESSAGE);
            }
        if(!valorCobroTxt.getText().matches("[0-9]{8}"))//.matches taoma una sub region de algo, en este caso números enteros del 0 al 9
            {
            double cobro=Double.parseDouble(valorCobroTxt.getText());
                if(cobro<=0)
                {
                    vacio=false;
                    valorCobroTxt.setText("");
                    JOptionPane.showMessageDialog(null,"El valor del cobro debe ser un número positivo","Valor incorrecto",JOptionPane.ERROR_MESSAGE);
            
                }
                vacio=false;
                valorCobroTxt.setText("");
                JOptionPane.showMessageDialog(null,"El valor del cobro solo acepta valores numéricos","Valor incorrecto",JOptionPane.ERROR_MESSAGE);
            }
        
            
    }//GEN-LAST:event_lblAgregarMouseClicked

    private void idCuotaTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idCuotaTxtActionPerformed
        int cod;
        
        boolean encontrado=false;
        cod=Integer.parseInt(idCuotaTxt.getText());
        Scanner s;
        Scanner sl = null;
        File f= new File("C:\\-JohanGTS-ProyectoFinalLabProg_2\\src\\ArchivosDeTexto\\archivoCuotas.txt");
        try 
        {
          
          if(!f.exists())
              f.createNewFile();
            try 
            {
                s=new Scanner(f);
                while(s.hasNextLine()&&!encontrado)
              {
                  String linea= s.nextLine();
                  sl= new Scanner(linea);
                  sl.useDelimiter("\\s*;\\s*");
                  try 
                  {
                      if(cod==Integer.parseInt(sl.next()))
                      {
                          valorCobroTxt.setText(sl.next());
                          crear=true;
                          encontrado=true;
                          sAntiguaLinea=(idCliente.getText()+";"+valorCobroTxt.getText());
                          lblDinamico.setText("Modificando");
                      }
                      else
                      {
                          System.out.println(fechaActual());
                          fechaCuotaTxt.setText(fechaActual());
                          valorCobroTxt.setText("");
                          crear=false;
                          encontrado=false;
                          lblDinamico.setText("Creando");
                          
                      }
                  } catch (Exception e) {
                      System.out.println("Error al leer el archivo ");
                      e.printStackTrace();
                  }
              }
              
                  sl.close();
                  s.close();
            } 
            catch (NullPointerException e) {
                lblDinamico.setText("Creando");
                statusCuotaTxt.setText("false");
                fechaCuotaTxt.setText(fechaActual());
            }  
          
        } 
        catch (IOException e) {
            e.printStackTrace();
        }
        
        
    }//GEN-LAST:event_idCuotaTxtActionPerformed

    private void idClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idClienteActionPerformed
        
        if(!idCliente.getText().matches("[0-9]{8}"))
            {
                
                idCliente.setText("");
                JOptionPane.showMessageDialog(null,"El id del horario de reserva solo acepta valores númerios enteros","Valor incorrecto",JOptionPane.ERROR_MESSAGE);
            }
            else
            {
                File archId= new File("C:\\-JohanGTS-ProyectoFinalLabProg_2\\src\\ArchivosDeTexto\\archivoClientes.txt");
                if (!archId.exists()) 
                {
                    JOptionPane.showMessageDialog(null,"El archivo del id no existe, cree una el id en el respectivo mantenimiento","Archivo inexistente",JOptionPane.ERROR_MESSAGE);
                    
                }
                else
                {
                    int cod;
                    cod=Integer.parseInt(idCliente.getText());
                    if(!revisarEnArchivo(archId, cod))
                    {
                        idCliente.setText("");
                        JOptionPane.showMessageDialog(null,"El archivo del id no existe, cree una el id en el respectivo mantenimiento","Archivo inexistente",JOptionPane.ERROR_MESSAGE);
                       
                    }
                }
            }
    }//GEN-LAST:event_idClienteActionPerformed
    
    public String fechaActual()
    {
        Date fechaA= new Date();
        SimpleDateFormat formato= new SimpleDateFormat("dd/MM/YYYY");
        return formato.format(fechaA);
    }
    
    public void  guardarDatos(int id,String tipo){
        try
        {
           FileWriter F1=new FileWriter("C:\\-JohanGTS-ProyectoFinalLabProg_2\\src\\ArchivosDeTexto\\archivoCuotas.txt",true);
           PrintWriter pw= new PrintWriter(F1);
           pw.println(id+";"+tipo);
           pw.close();
        } catch (Exception e) 
        {
            JOptionPane.showMessageDialog(null, "Error al grabar el archivo");
        }
    }
    
    public boolean revisarEnArchivo(File archivo, int id)
    {
        if (!archivo.exists()) {
            return false;
        }
        else
        {
            try 
            {
                Scanner sca=new Scanner(archivo);
                Scanner sca2 = null;
                while(sca.hasNextLine())
                {
                  String linea= sca.nextLine();
                  sca2= new Scanner(linea);
                  sca2.useDelimiter("\\s*;\\s*");
                    for (int i = 0; i < 9; i++) 
                    {
                        sca2.next();
                    }
                  String estatus=sca2.next();
                  String tipo=sca2.next();
                    System.out.println(tipo);
                    System.out.println(estatus);
                  if(estatus.equals("activo")&&tipo.equals("activo"))
                    return true;
                      
                  else
                  {
                      JOptionPane.showMessageDialog(null,"El estatus y tipo del"
                              + " cliente no son los correctos, cambie en mantenimiento","Estatus y tipo incorrecto",JOptionPane.ERROR_MESSAGE);
                      return false;
                  }
                } 
            }
            catch (FileNotFoundException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null,"El estatus y tipo del"
                              + " cliente no son los correctos, cambie en mantenimiento","Estatus y tipo incorrecto",JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }
        return true;
    }
    
    public static  void modificar(String lineaAntigua, String nuevaLinea){ 
       
       File fAntiguo= new File("C:\\-JohanGTS-ProyectoFinalLabProg_2\\src\\ArchivosDeTexto\\archivoCuotas.txt");
       File fNuevo= new File("C:\\-JohanGTS-ProyectoFinalLabProg_2\\src\\ArchivosDeTexto\\temporal.txt");
       String aCadena=lineaAntigua;
       String nCadena=nuevaLinea;
       
       BufferedReader br;
        try {
            if(fAntiguo.exists())
            {
                br=new BufferedReader(new FileReader(fAntiguo));
                String linea;
                while((linea=br.readLine()) != null)
                {
                    
                    if(linea.equals(aCadena)){
                        escribir(fNuevo, nCadena);
                    }
                        
                    else{
                        escribir(fNuevo, linea);
                    }
                        
                }
                br.close();
                String nAntiguo=fAntiguo.getName();
                File auxiliar= new File(fAntiguo.getAbsolutePath());
                borrar(fAntiguo);
                System.out.println(fNuevo.renameTo(auxiliar));
            }
            else
                System.out.println("El archivo no existe");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    public static void escribir(File Ffichero,String cadena)
    {
        BufferedWriter bw;
        try 
        {
            if(!Ffichero.exists())
                Ffichero.createNewFile();
            bw= new BufferedWriter(new FileWriter(Ffichero,true));
            bw.write(cadena+"\r\n");
            bw.close();
        }
        catch (Exception ex) {
              ex.printStackTrace();
           } 
    }
    public static  void borrar(File Ffichero){
        try {

            if(Ffichero.exists())
            {
                System.out.println(Ffichero.delete());
            }
            } 
           catch (Exception ex) { 
             System.out.println(ex.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fechaCuotaTxt;
    private javax.swing.JLabel fechaCuotalbl;
    private javax.swing.JTextField idCliente;
    private javax.swing.JLabel idClientelbl;
    private javax.swing.JTextField idCuotaTxt;
    private javax.swing.JLabel idCuotalbl;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JLabel lblAgregar;
    private javax.swing.JLabel lblDinamico;
    private javax.swing.JTextField statusCuotaTxt;
    private javax.swing.JLabel statusCuotalbl;
    private javax.swing.JTextField valorCobroTxt;
    // End of variables declaration//GEN-END:variables
}
